-- MySQL Script generated by MySQL Workbench
-- 05/01/14 07:48:00
-- Model: OptiGrade — Data Model    Version: 1.0

-- OptiGrade 3.0 is an on-line service which provides a software as a service (SAAS) platform to process and store in the cloud optically captured data. It provides an on-line optical answer sheet composer/editor, facilities for the remote scoring and evaluation of multi-choice exams, and a framework with analytic tools for surveys data, captured using desktop optical mark recognition (OMR) technology with a Web-based application front-end.
-- 
-- Copyright © 1997‒2014, OptiSoft Ltd. All rights reserved.

SET GLOBAL init_connect='SET autocommit=0';
SET GLOBAL autocommit=0;
SET AUTOCOMMIT = 0;
SET NAMES utf8;
SET time_zone = "+00:00";


-- -----------------------------------------------------
-- Schema OptiGrade
-- -----------------------------------------------------
-- Database Schemas for OptiGrade 3.0 (On-line Service)
-- ----------------------------------------------------
-- 
-- Naming conventions
-- ---------------------------------
-- 
-- 1. Pascal (upper camel) casing.
-- 2. No prefixes for tables or columns names. (For exceptions see 5, 6, and 7.)
-- 3. Plural entity names for tables names, where it makes sense. E.g., Addresses.
-- 4. Singular attribute names for columns names. E.g., Street.
-- 5. Singular aliases for entities or objects in queries. E.g., SELECT Address.Street FROM Addresses AS Address.
-- 6. "Id" prefixed by singular entity (table) names for primary keys columns. E.g., AddressId.
-- 7. Use the same name as the referenced column for related foreign key columns.
-- 8. Add meaningful prefix when a column is referenced twice or more from the same table. E.g., OwnerAddressId, UserAddressId.
-- 9. Singular transaction/Plural entity names for schema names, where it makes sense. E.g., UsersManagement, AccessControl.
-- 
-- Column ordering (suggested)
-- ---------------------------------
-- 
-- 1. Primary key, including multi-field primary keys that include foreign keys.
-- 2. Foreign key.
-- 3. Unique index.
-- 4. User generated data.
-- 5. System generated data (non-Boolean, Boolean).
-- 6. Timestamps, etc.
-- 7. References to uploaded files.
-- 8. Large binary/text blocks
-- 
-- Relation and Index names
-- ---------------------------------
-- 
-- Primary key:          TableName_ColumName_pk, TableName_pk
-- Foreign key relation: TableName_ForeignTable_ColumName_fk
-- Foreign key index:    TableName_ForeignTable_ColumName_fx
-- Unique keys:          TableName_ColumnName[_OtherColumnName]_uk
-- Indexes:              TableName_ColumnName[_OtherColumnName]_ix
-- 
-- Auto-increment sequences
-- ---------------------------------
-- 
-- TableName_ColumName_sq
-- 
-- User types*
-- ---------------------------------
-- 
-- Enumerations: GLOBAL_NAME[_ENUM], TABLENAME_COLUMNNAME_ENUM
-- Sets:         GLOBAL_NAME[_SET], TABLENAME_COLUMNNAME_SET
-- 
-- *) You may suppress the qualification suffix (_ENUM, _SET) when a global name has a complete meaning.
-- 
-- Copyright © 1997‒2014, OptiSoft Ltd. All rights reserved.
-- 
-- =================================
-- 
START TRANSACTION;


-- -----------------------------------------------------
-- Create DB users
-- -----------------------------------------------------
DROP USER `OG.WebClient`@`localhost`, `OG.WebService`@`localhost`,
          `OG.WebAdmin`@`localhost`, `OG.Developer`@`localhost`,
		  `OG.Manager`@`localhost`;

CREATE USER `OG.WebClient`@`localhost` IDENTIFIED BY PASSWORD '*00A51F3F48415C7D4E8908980D443C29C69B60C9',
  `OG.WebService`@`localhost` IDENTIFIED BY PASSWORD '*00A51F3F48415C7D4E8908980D443C29C69B60C9',
  `OG.WebAdmin`@`localhost` IDENTIFIED BY PASSWORD '*00A51F3F48415C7D4E8908980D443C29C69B60C9',
  `OG.Developer`@`localhost` IDENTIFIED BY PASSWORD '*00A51F3F48415C7D4E8908980D443C29C69B60C9',
  `OG.Manager`@`localhost` IDENTIFIED BY PASSWORD '*00A51F3F48415C7D4E8908980D443C29C69B60C9';


-- -----------------------------------------------------
-- Schema PlacesManagement
-- -----------------------------------------------------
-- Places Management Schema for OptiGrade 3.0 (On-line Service)
-- ------------------------------------------------------------
-- 
-- This data model supports international postal addresses.
-- 
-- Note that: Not every country supports postal (or zip) codes, nor every country has provinces, states or departments. Also, a few countries have a more complex political dependence division. Codes for provinces and cities are supported optionally.
-- 
-- Involved user types:
-- ---------------------------------
-- 
-- COUNTRY_DEPENDENCE = ENUM('Province', 'State', 'Department', 'Other', 'None')
-- POSTAL_CODE        = ENUM('Postal Code', 'ZIP Code', 'None')
-- 
-- =================================
-- 
DROP SCHEMA IF EXISTS `PlacesManagement`;
CREATE SCHEMA IF NOT EXISTS `PlacesManagement` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;


-- -----------------------------------------------------
-- Table `PlacesManagement`.`Countries`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PlacesManagement`.`Countries` (
  `CountryId` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `CODE` VARCHAR(2) NOT NULL,
  `Name` VARCHAR(32) NOT NULL,
  `Nationality` VARCHAR(32) NOT NULL,
  `DependenceType` ENUM('Province', 'State', 'Department', 'None') NOT NULL DEFAULT 'None',
  `PostalCodeType` ENUM('Postal Code', 'ZIP Code', 'None') NOT NULL DEFAULT 'None',
  `ProvinceCodeLength` TINYINT NULL DEFAULT NULL,
  `CityCodeLength` TINYINT NULL DEFAULT NULL,
  PRIMARY KEY (`CountryId`),
  UNIQUE INDEX `Countries_CODE_uk` (`CODE` ASC),
  UNIQUE INDEX `Countries_Name_uk` (`Name` ASC),
  UNIQUE INDEX `Countries_Nationality_uk` (`Nationality` ASC))
ENGINE = InnoDB
COMMENT = 'A list of countries, each with the corresponding nationality, dependency hierarchy and coding standards.';


-- -----------------------------------------------------
-- Table `PlacesManagement`.`Provinces`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PlacesManagement`.`Provinces` (
  `ProvinceId` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `CountryId` BIGINT UNSIGNED NOT NULL,
  `CODE` VARCHAR(3) NULL DEFAULT NULL,
  `Name` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`ProvinceId`, `CountryId`),
  UNIQUE INDEX `Provinces_CountryId_CODE_uk` (`CountryId` ASC, `CODE` ASC),
  UNIQUE INDEX `Provinces_CountryId_Name_uk` (`CountryId` ASC, `Name` ASC),
  INDEX `Province_CODE_ix` (`CODE` ASC),
  INDEX `Provinces_Name_ix` (`Name` ASC),
  CONSTRAINT `Provinces_Countries_CountryId_fk`
    FOREIGN KEY (`CountryId`)
    REFERENCES `PlacesManagement`.`Countries` (`CountryId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'A list of provinces, states, or departments and codes for a given country.';


-- -----------------------------------------------------
-- Table `PlacesManagement`.`Cities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PlacesManagement`.`Cities` (
  `CityId` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `CountryId` BIGINT UNSIGNED NOT NULL,
  `ProvinceId` BIGINT UNSIGNED NULL,
  `CODE` VARCHAR(3) NOT NULL,
  `Name` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`CityId`, `CountryId`),
  INDEX `Cities_Countries_CountryId_fx` (`CountryId` ASC),
  UNIQUE INDEX `Cities_CountryId_CODE_uk` (`CountryId` ASC, `CODE` ASC),
  UNIQUE INDEX `Cities_ProvinceId_Name_uk` (`ProvinceId` ASC, `Name` ASC),
  INDEX `Cities_CODE_ix` (`CODE` ASC),
  INDEX `Cities_Name_ix` (`Name` ASC),
  CONSTRAINT `Cities_Countries_CountryId_fk`
    FOREIGN KEY (`CountryId`)
    REFERENCES `PlacesManagement`.`Countries` (`CountryId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `Cities_Provinces_ProvinceId_fk`
    FOREIGN KEY (`ProvinceId`)
    REFERENCES `PlacesManagement`.`Provinces` (`ProvinceId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'A list of cities and codes for a given province and/or country.';


-- -----------------------------------------------------
-- Table `PlacesManagement`.`PostalCodes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PlacesManagement`.`PostalCodes` (
  `PostalCodeId` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `CityId` BIGINT UNSIGNED NOT NULL,
  `CountryId` BIGINT UNSIGNED NOT NULL,
  `PostalCode` VARCHAR(16) NOT NULL,
  PRIMARY KEY (`PostalCodeId`, `CityId`, `CountryId`),
  INDEX `PostalCodes_Cities_CityId_CountryId_fx` (`CityId` ASC, `CountryId` ASC),
  UNIQUE INDEX `PostalCodes_CountryId_PostalCode_uk` (`CountryId` ASC, `PostalCode` ASC),
  INDEX `PostalCodes_PostalCode_ix` (`PostalCode` ASC),
  CONSTRAINT `PostalCodes_Cities_CityId_CountryId_fk`
    FOREIGN KEY (`CityId` , `CountryId`)
    REFERENCES `PlacesManagement`.`Cities` (`CityId` , `CountryId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'A list of postal codes.';


-- -----------------------------------------------------
-- Table `PlacesManagement`.`Addresses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PlacesManagement`.`Addresses` (
  `AddressId` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `PostalCodeType` ENUM('Postal Code', 'ZIP Code', 'None') NOT NULL DEFAULT 'None',
  `Street1` VARCHAR(128) NOT NULL,
  `Street2` VARCHAR(128) NULL DEFAULT NULL,
  `Notes` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`AddressId`))
ENGINE = InnoDB
COMMENT = 'Shared placeholder for physical addresses.';


-- -----------------------------------------------------
-- Table `PlacesManagement`.`AddressesWithPostalCode`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PlacesManagement`.`AddressesWithPostalCode` (
  `AddressId` BIGINT UNSIGNED NOT NULL,
  `PostalCodeId` BIGINT UNSIGNED NOT NULL,
  `CityId` BIGINT UNSIGNED NOT NULL,
  `CountryId` BIGINT UNSIGNED NOT NULL,
  PRIMARY KEY (`AddressId`),
  INDEX `AddressesWithPostalCode_PostalCodes_PostalCodeId_fx` (`PostalCodeId` ASC, `CityId` ASC, `CountryId` ASC),
  CONSTRAINT `AddressesWithPostalCode_Addresses_AddressId_fk`
    FOREIGN KEY (`AddressId`)
    REFERENCES `PlacesManagement`.`Addresses` (`AddressId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `AddressesWithPostalCode_PostalCodes_PostalCodeId_fk`
    FOREIGN KEY (`PostalCodeId` , `CityId` , `CountryId`)
    REFERENCES `PlacesManagement`.`PostalCodes` (`PostalCodeId` , `CityId` , `CountryId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PlacesManagement`.`AddressesWithoutPostalCode`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PlacesManagement`.`AddressesWithoutPostalCode` (
  `AddressId` BIGINT UNSIGNED NOT NULL,
  `CityId` BIGINT UNSIGNED NOT NULL,
  `CountryId` BIGINT UNSIGNED NOT NULL,
  PRIMARY KEY (`AddressId`),
  INDEX `AddressesWithoutPostalCode_Cities_CityId_fx` (`CityId` ASC, `CountryId` ASC),
  CONSTRAINT `AddressesWithoutPostalCode_Addresses_AddressId_fk`
    FOREIGN KEY (`AddressId`)
    REFERENCES `PlacesManagement`.`Addresses` (`AddressId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `AddressesWithoutPostalCode_Cities_CityId_fk`
    FOREIGN KEY (`CityId` , `CountryId`)
    REFERENCES `PlacesManagement`.`Cities` (`CityId` , `CountryId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


COMMIT;


-- -----------------------------------------------------
-- Users privileges
-- -----------------------------------------------------
GRANT SELECT ON `PlacesManagement`.* TO `OG.WebClient`@`localhost`;
GRANT INSERT, SELECT, UPDATE ON `PlacesManagement`.* TO `OG.WebService`@`localhost`;
GRANT INSERT, SELECT, UPDATE, DELETE ON `PlacesManagement`.* TO `OG.WebAdmin`@`localhost`;
GRANT ALL PRIVILEGES ON `PlacesManagement`.* TO `OG.Developer`@`localhost`;
GRANT ALL PRIVILEGES ON `PlacesManagement`.* TO `OG.Manager`@`localhost` WITH GRANT OPTION;
FLUSH PRIVILEGES;


-- --------------------------------------------------------
-- Host:                         127.0.0.1
-- Server:                       localhost
-- Port:                         3306
-- Server version:               5.6.12-log - MySQL Community Server (GPL)
-- Server OS:                    Windows 7 - 32bit
-- MySQL Workbench version:      6.1.4.11773 Community build 1454
-- HeidiSQL version:             6.0.0.4024
-- phpMyAdmin version:           4.0.4
-- PHP version:                  5.4.16
-- Date/time:                    2014-05-01 07:48:00
-- --------------------------------------------------------
