-- MySQL Script generated by MySQL Workbench
-- 04/27/14 09:19:25
-- Model: OptiGrade — Data Model    Version: 1.0

-- OptiGrade 3.0 is an on-line service which provides a software as a service (SAAS) platform to process and store in the cloud optically captured data. It provides an on-line optical answer sheet composer/editor, facilities for the remote scoring and evaluation of multi-choice exams, and a framework with analytic tools for surveys data, captured using desktop optical mark recognition (OMR) technology with a Web-based application front-end.
-- 
-- Copyright © 1997‒2014, OptiSoft Ltd. All rights reserved.

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES,NO_AUTO_VALUE_ON_ZERO';
SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT;
SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS;
SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION;

-- -----------------------------------------------------
-- Schema OptiGrade
-- -----------------------------------------------------
--
-- Naming conventions
-- ---------------------------------
-- 
-- 1. Plural names for tables, use singular aliases for entities or objects.
-- 2. Singular names for columns.
-- 3. No prefixes for table or column names, except for primary and foreign key columns; use singular prefix.
-- 4. Pascal casing (upper camel casing).
-- 
-- Column ordering (sugested)
-- ---------------------------------
-- 
-- 1. Primary key, including multi-field primary keys that include foreign keys.
-- 2. Foreign key.
-- 3. Unique index.
-- 4. User generated data.
-- 5. System generated data (non-boolean, boolean).
-- 6. Timestamps, etc.
-- 7. References to uploaded files.
-- 8. Large binary/text blocks
-- 
-- Relation and Index names
-- ---------------------------------
-- 
-- Primary key:          TableName_ColumName_pk, TableName_pk
-- Foreign key relation: TableName_ForeignTable_ColumName_fk
-- Foreign key index:    TableName_ForeignTable_ColumName_fx
-- Unique keys:          TableName_ColumnName[_OtherColumnName]_uk
-- Index keys:           TableName_ColumnName[_OtherColumnName]_ix
-- 
-- Auto-increment sequences
-- ---------------------------------
-- 
-- TableName_ColumName_sq
-- 
-- User types
-- ---------------------------------
-- 
-- Enumerations: GLOBAL_NAME_ENUM, TABLE_NAME_ENUM
-- Sets:         GLOBAL_NAME_SET, TABLE_NAME_SET
-- 
-- Copyright © 1997‒2014, OptiSoft Ltd. All rights reserved.
-- 
-- =================================
-- 
CREATE SCHEMA IF NOT EXISTS `OptiGrade` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
-- -----------------------------------------------------
-- Schema PlacesManagement
-- -----------------------------------------------------
-- Place Management Schema for OptiGrade 3.0 (On-line Service)
-- 
-- =================================
-- 
CREATE SCHEMA IF NOT EXISTS `PlacesManagement` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
-- -----------------------------------------------------
-- Schema PersonsManagement
-- -----------------------------------------------------
-- Persons Management Schema for OptiGrade 3.0 (On-line Service)
-- 
-- =================================
-- 
CREATE SCHEMA IF NOT EXISTS `PersonsManagement` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
-- -----------------------------------------------------
-- Schema AccountsManagement
-- -----------------------------------------------------
-- Account Management Schema for OptiGrade 3.0 (On-line Service)
-- 
-- =================================
-- 
CREATE SCHEMA IF NOT EXISTS `AccountsManagement` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
-- -----------------------------------------------------
-- Schema AccessControl
-- -----------------------------------------------------
-- Access Control Schema for OptiGrade 3.0 (On-line Service)
-- 
-- =================================
-- 
-- This is a data model for Role Based Access Control. It is based on the NIST RBAC standard. More info about this standard can be found here: http://csrc.nist.gov/groups/SNS/rbac/.
CREATE SCHEMA IF NOT EXISTS `AccessControl` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;


-- -----------------------------------------------------
-- Table `PlacesManagement`.`Countries`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PlacesManagement`.`Countries` (
  `CountryId` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `CODE` VARCHAR(2) NOT NULL,
  `Name` VARCHAR(32) NOT NULL,
  `Nation` VARCHAR(32) NOT NULL,
  `ProvinceLevel` ENUM('Province', 'State', 'Department', 'Other') NOT NULL DEFAULT 'Province',
  `CityLevel` ENUM('City', 'County', 'Other') NOT NULL DEFAULT 'City',
  PRIMARY KEY (`CountryId`),
  UNIQUE INDEX `Countries_CODE_uk` (`CODE` ASC),
  UNIQUE INDEX `Countries_Name_uk` (`Name` ASC),
  UNIQUE INDEX `Countries_Nation_uk` (`Nation` ASC))
ENGINE = InnoDB
COMMENT = 'A list of countries, each with the corresponding nationality and polytics dependency hierarchy levels.';


-- -----------------------------------------------------
-- Table `PlacesManagement`.`Provinces`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PlacesManagement`.`Provinces` (
  `ProvinceId` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `CountryId` BIGINT UNSIGNED NOT NULL,
  `CODE` VARCHAR(2) NOT NULL,
  `Name` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`ProvinceId`),
  INDEX `Provinces_Countries_CountryId_fx` (`CountryId` ASC),
  UNIQUE INDEX `Provinces_CountryId_CODE_uk` (`CountryId` ASC, `CODE` ASC),
  UNIQUE INDEX `Provinces_CountryId_Name_uk` (`CountryId` ASC, `Name` ASC),
  INDEX `Provinces_Name_ix` (`Name` ASC),
  INDEX `Provinces_CODE_ix` (`CODE` ASC),
  CONSTRAINT `Provinces_Countries_CountryId_fk`
    FOREIGN KEY (`CountryId`)
    REFERENCES `PlacesManagement`.`Countries` (`CountryId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'A list of provinces, states, or departments for a given country.';


-- -----------------------------------------------------
-- Table `PlacesManagement`.`Cities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PlacesManagement`.`Cities` (
  `CityId` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `ProvinceId` BIGINT UNSIGNED NOT NULL,
  `CountryId` BIGINT UNSIGNED NOT NULL,
  `CODE` VARCHAR(3) NOT NULL,
  `Name` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`CityId`),
  INDEX `Cities_Countries_CountryId_fx` (`CountryId` ASC),
  INDEX `Cities_Provinces_ProvinceId_CountryId_fx` (`ProvinceId` ASC, `CountryId` ASC),
  UNIQUE INDEX `Cities_CountryId_CODE_uk` (`CountryId` ASC, `CODE` ASC),
  UNIQUE INDEX `Cities_ProvinceId_Name_uk` (`ProvinceId` ASC, `Name` ASC),
  INDEX `Cities_Name_ix` (`Name` ASC),
  INDEX `Cities_CODE_ix` (`CODE` ASC),
  CONSTRAINT `Cities_Provinces_ProvinceId_CountryId_fk`
    FOREIGN KEY (`ProvinceId` , `CountryId`)
    REFERENCES `PlacesManagement`.`Provinces` (`ProvinceId` , `CountryId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `Cities_Countries_CountryId_fk`
    FOREIGN KEY (`CountryId`)
    REFERENCES `PlacesManagement`.`Countries` (`CountryId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'A list of cities, or countys for given province and country.';


-- -----------------------------------------------------
-- Table `PlacesManagement`.`Addresses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PlacesManagement`.`Addresses` (
  `AddressId` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `CityId` BIGINT UNSIGNED NOT NULL,
  `Address1` VARCHAR(128) NOT NULL,
  `Address2` VARCHAR(128) NULL DEFAULT NULL,
  `Notes` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`AddressId`),
  INDEX `Addresses_Cities_CityId_fx` (`CityId` ASC),
  CONSTRAINT `Addresses_Cities_CityId_fk`
    FOREIGN KEY (`CityId`)
    REFERENCES `PlacesManagement`.`Cities` (`CityId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Shared placeholder for physical addresses.';


-- -----------------------------------------------------
-- Table `AccountsManagement`.`Categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccountsManagement`.`Categories` (
  `CategoryId` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID for this category.',
  `Name` VARCHAR(32) NOT NULL COMMENT 'Unique name for this category.',
  `AccountType` ENUM('Individual', 'Corporate', 'Both') NOT NULL DEFAULT 'Both',
  `Visibility` ENUM('Public', 'Hidden', 'Private') NOT NULL DEFAULT 'Public' COMMENT 'Visibility of this category.',
  `Description` TEXT NULL DEFAULT NULL COMMENT 'Description for this category.',
  PRIMARY KEY (`CategoryId`),
  UNIQUE INDEX `Categories_Name_uk` (`Name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `AccountsManagement`.`Contracts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccountsManagement`.`Contracts` (
  `ContractId` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID for this contract.',
  `CategoryId` BIGINT UNSIGNED NOT NULL COMMENT 'ID for the contract\'s account category.',
  `Name` VARCHAR(32) NOT NULL COMMENT 'Unique name for this contract.',
  `Quota` INT(11) NOT NULL COMMENT 'Quota for this contract.',
  `Units` ENUM('Sheet', 'Day') NOT NULL DEFAULT 'Sheet' COMMENT 'Units in which the quota is expressed.',
  `Visibility` ENUM('Public', 'Hidden', 'Private') NOT NULL DEFAULT 'Public' COMMENT 'Visibility of this Contract.',
  `Description` TEXT NULL DEFAULT NULL COMMENT 'Description for this Contract.',
  PRIMARY KEY (`ContractId`, `CategoryId`),
  INDEX `Contracts_Categories_CategoryId_fx` (`CategoryId` ASC),
  UNIQUE INDEX `Contracts_Name_uk` (`Name` ASC),
  CONSTRAINT `Contracts_Categories_CategoryId_fk`
    FOREIGN KEY (`CategoryId`)
    REFERENCES `AccountsManagement`.`Categories` (`CategoryId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `AccountsManagement`.`ContractDetails`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccountsManagement`.`ContractDetails` (
  `ContractId` BIGINT UNSIGNED NOT NULL,
  `CategoryId` BIGINT UNSIGNED NOT NULL,
  `MaxUsers` INT(11) NOT NULL DEFAULT -1,
  `MaxStudents` INT(11) NOT NULL DEFAULT -1,
  `MaxAssignatres` INT(11) NOT NULL DEFAULT -1,
  `MaxCourses` INT(11) NOT NULL DEFAULT -1,
  PRIMARY KEY (`ContractId`, `CategoryId`),
  CONSTRAINT `ContractDetails_Contracts_ContractId_CategoryId_fk`
    FOREIGN KEY (`ContractId` , `CategoryId`)
    REFERENCES `AccountsManagement`.`Contracts` (`ContractId` , `CategoryId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PersonsManagement`.`Persons`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PersonsManagement`.`Persons` (
  `PersonId` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `IDN` VARCHAR(16) NOT NULL,
  `FirstName` VARCHAR(32) NOT NULL,
  `LastName` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`PersonId`),
  UNIQUE INDEX `Persons_IDN_uk` (`IDN` ASC))
ENGINE = InnoDB
COMMENT = 'A list of persons.';


-- -----------------------------------------------------
-- Table `PersonsManagement`.`PersonDetails`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PersonsManagement`.`PersonDetails` (
  `PersonId` BIGINT UNSIGNED NOT NULL,
  `NationCountryId` BIGINT UNSIGNED NOT NULL COMMENT 'Nationality.',
  `POBCityId` BIGINT UNSIGNED NOT NULL COMMENT 'Place of birth.',
  `DOB` DATE NOT NULL COMMENT 'Date of birth.',
  `Gender` ENUM('Male', 'Female') NOT NULL DEFAULT 'Male',
  `MaritalStatus` ENUM('Single', 'Engaged', 'Married', 'Separated', 'Divorced', 'Widow(er)', 'Other') NOT NULL DEFAULT 'Single',
  `AddressId` BIGINT UNSIGNED NOT NULL COMMENT 'Residence.',
  `Phone` VARCHAR(24) NULL DEFAULT NULL,
  `Mobile` VARCHAR(24) NULL DEFAULT NULL,
  `Notes` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`PersonId`),
  INDEX `PersonDetails_Cities_CityId_fx` (`POBCityId` ASC),
  INDEX `PersonDetails_Countries_CountryId_fx` (`NationCountryId` ASC),
  INDEX `PersonDetails_Addresses_AddressId_fx` (`AddressId` ASC),
  CONSTRAINT `PersonDetails_Persons_PersonId_fk`
    FOREIGN KEY (`PersonId`)
    REFERENCES `PersonsManagement`.`Persons` (`PersonId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `PersonDetails_Cities_CityId_fk`
    FOREIGN KEY (`POBCityId`)
    REFERENCES `PlacesManagement`.`Cities` (`CityId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `PersonDetails_Countries_CountryId_fk`
    FOREIGN KEY (`NationCountryId`)
    REFERENCES `PlacesManagement`.`Countries` (`CountryId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `PersonDetails_Addresses_AddressId_fk`
    FOREIGN KEY (`AddressId`)
    REFERENCES `PlacesManagement`.`Addresses` (`AddressId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'A person\'s detailed information.';


-- -----------------------------------------------------
-- Table `PersonsManagement`.`PersonContacts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PersonsManagement`.`PersonContacts` (
  `PersonId` BIGINT UNSIGNED NOT NULL,
  `PrimaryMail` VARCHAR(64) NOT NULL,
  `WebURL` VARCHAR(256) NULL,
  `Facebook` VARCHAR(256) NULL,
  `Twitter` VARCHAR(256) NULL,
  `LinkedIn` VARCHAR(256) NULL,
  `GooglePlus` VARCHAR(256) NULL,
  PRIMARY KEY (`PersonId`),
  CONSTRAINT `PersonContacts_Persons_PersonId_fk`
    FOREIGN KEY (`PersonId`)
    REFERENCES `PersonsManagement`.`Persons` (`PersonId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'A person\'s contact information.';


-- -----------------------------------------------------
-- Table `AccessControl`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccessControl`.`Users` (
  `UserId` BIGINT UNSIGNED NOT NULL,
  `UserName` VARCHAR(64) BINARY NOT NULL,
  `PassWord` VARCHAR(64) BINARY NOT NULL,
  `ProfileName` VARCHAR(128) NOT NULL,
  `SecurityMail` VARCHAR(64) NOT NULL,
  `CreatedOn` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Comments` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`UserId`),
  UNIQUE INDEX `Users_UserName_uk` (`UserName` ASC),
  CONSTRAINT `Users_Persons_UserId_fk`
    FOREIGN KEY (`UserId`)
    REFERENCES `PersonsManagement`.`Persons` (`PersonId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'A set of subjects. A subject is an active entity, generally in the form of a user, process, or device, that causes data to flow among objects or changes the system state. An user is any person who interacts directly with the system.';


-- -----------------------------------------------------
-- Table `AccountsManagement`.`Accounts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccountsManagement`.`Accounts` (
  `AccountId` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID for this account.',
  `OwnerUserId` BIGINT UNSIGNED NOT NULL COMMENT 'ID of the account\'s owner. Account ownership is tranferable.',
  `CategoryId` BIGINT UNSIGNED NOT NULL COMMENT 'ID of the account\'s category.',
  `ContractId` BIGINT UNSIGNED NOT NULL COMMENT 'ID of the account\'s contract.',
  `DisplayName` VARCHAR(64) NOT NULL COMMENT 'Unique name for this account.',
  `HashName` VARCHAR(32) NOT NULL COMMENT 'MD5 Hash name for the account, it is also the name of the schema associated with the account.',
  `Locked` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'TRUE if this account is locked by the service provider.',
  `CreatedOn` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`AccountId`),
  INDEX `Accounts_Contracts_ContractId_CategoryId_fx` (`CategoryId` ASC, `ContractId` ASC),
  UNIQUE INDEX `Accounts_OwnerUserId_uk` (`OwnerUserId` ASC),
  UNIQUE INDEX `Accounts_DisplayName_uk` (`DisplayName` ASC),
  UNIQUE INDEX `Accounts_HashName_uk` (`HashName` ASC),
  CONSTRAINT `Accounts_Users_OwnerUserId_fk`
    FOREIGN KEY (`OwnerUserId`)
    REFERENCES `AccessControl`.`Users` (`UserId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `Accounts_Contracts_ContractId_CategoryId_fk`
    FOREIGN KEY (`CategoryId` , `ContractId`)
    REFERENCES `AccountsManagement`.`Contracts` (`CategoryId` , `ContractId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `AccountsManagement`.`AccountDetails`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccountsManagement`.`AccountDetails` (
  `AccountId` BIGINT UNSIGNED NOT NULL,
  `AddressId` BIGINT UNSIGNED NOT NULL,
  `IDC` VARCHAR(16) NOT NULL COMMENT 'Contributor ID.',
  `Balance` INT(11) NOT NULL COMMENT 'Current balance or remaining quota for this account. Could be negative.',
  `Comments` TEXT NULL DEFAULT NULL COMMENT 'Any comment about the account status.',
  PRIMARY KEY (`AccountId`),
  INDEX `AccountDetails_Addresses_AddressId_fx` (`AddressId` ASC),
  UNIQUE INDEX `AccountDetails_IDC_uk` (`IDC` ASC),
  CONSTRAINT `AccountDetails_Accounts_AccountId_fk`
    FOREIGN KEY (`AccountId`)
    REFERENCES `AccountsManagement`.`Accounts` (`AccountId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `AccountDetails_Addresses_AddressId_fk`
    FOREIGN KEY (`AddressId`)
    REFERENCES `PlacesManagement`.`Addresses` (`AddressId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `AccountsManagement`.`CorporateAccounts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccountsManagement`.`CorporateAccounts` (
  `AccountId` BIGINT UNSIGNED NOT NULL,
  `AdministrativeUserId` BIGINT UNSIGNED NOT NULL COMMENT 'ID for administrative contact. Phone and e-mail address can be linked through this column.',
  `TechnicalUserId` BIGINT UNSIGNED NOT NULL COMMENT 'ID for technical contact. Phone and e-mail address can be linked through this column.',
  `InstitutionName` VARCHAR(64) NOT NULL,
  `InstitutionType` ENUM('University', 'Highschool', 'Midleschool', 'Elementary', 'Surveys', 'Exams', 'Opscan') NOT NULL,
  PRIMARY KEY (`AccountId`),
  INDEX `CorporateAccounts_Users_AdministrativeUserId_fx` (`AdministrativeUserId` ASC),
  INDEX `CorporateAccounts_Users_TechnicalUserId_fx` (`TechnicalUserId` ASC),
  CONSTRAINT `CorporateAccount_Accounts_AccountId_fk`
    FOREIGN KEY (`AccountId`)
    REFERENCES `AccountsManagement`.`Accounts` (`AccountId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `CorporateAccounts_Users_AdministrativeUserId_fk`
    FOREIGN KEY (`AdministrativeUserId`)
    REFERENCES `AccessControl`.`Users` (`UserId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `CorporateAccounts_Users_TechnicalUserId_fk`
    FOREIGN KEY (`TechnicalUserId`)
    REFERENCES `AccessControl`.`Users` (`UserId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `AccountsManagement`.`IndividualAccounts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccountsManagement`.`IndividualAccounts` (
  `AccountId` BIGINT UNSIGNED NOT NULL,
  PRIMARY KEY (`AccountId`),
  CONSTRAINT `IndividualAccount_Accounts_AccountId_fk`
    FOREIGN KEY (`AccountId`)
    REFERENCES `AccountsManagement`.`Accounts` (`AccountId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `AccessControl`.`Chairs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccessControl`.`Chairs` (
  `ChairId` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(64) NOT NULL,
  `CreatedOn` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`ChairId`),
  UNIQUE INDEX `Chairs_Name_uk` (`Name` ASC))
ENGINE = InnoDB
COMMENT = 'A set of associations between a user and an account.';


-- -----------------------------------------------------
-- Table `AccessControl`.`Roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccessControl`.`Roles` (
  `RoleId` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(64) BINARY NOT NULL,
  `CreatedOn` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`RoleId`),
  UNIQUE INDEX `Roles_Name_uk` (`Name` ASC))
ENGINE = InnoDB
COMMENT = 'Role constraints: a relationship between or among roles. Role hierarchy: a partial order relationship established among roles. A role is a job function wirhin the system that describes the authority and responsability conferred on a user assigned to the role.';


-- -----------------------------------------------------
-- Table `AccessControl`.`Objects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccessControl`.`Objects` (
  `ObjectId` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(64) BINARY NOT NULL,
  `CreatedOn` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`ObjectId`),
  UNIQUE INDEX `Objects_Name_uk` (`Name` ASC))
ENGINE = InnoDB
COMMENT = 'A set of objects. An object is a passive entity that contains or receive data.';


-- -----------------------------------------------------
-- Table `AccessControl`.`Operations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccessControl`.`Operations` (
  `OperationId` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(64) BINARY NOT NULL,
  `CreatedOn` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`OperationId`),
  UNIQUE INDEX `Operations_Name_uk` (`Name` ASC))
ENGINE = InnoDB
COMMENT = 'A set of actions that may be executed on objects.';


-- -----------------------------------------------------
-- Table `AccessControl`.`Permissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccessControl`.`Permissions` (
  `PermissionId` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(64) BINARY NOT NULL,
  `CreatedOn` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`PermissionId`),
  UNIQUE INDEX `Permissions_Name_uk` (`Name` ASC))
ENGINE = InnoDB
COMMENT = 'A set of descriptions of the type of authorised interactions a subject can have with an object.';


-- -----------------------------------------------------
-- Table `AccessControl`.`Sessions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccessControl`.`Sessions` (
  `SessionId` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `ChairId` BIGINT UNSIGNED NOT NULL,
  `Name` VARCHAR(64) NOT NULL,
  `StartedOn` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`SessionId`),
  INDEX `Sessions_Chairs_ChairId_fx` (`ChairId` ASC),
  UNIQUE INDEX `Sessions_Name_uk` (`Name` ASC),
  CONSTRAINT `Sessions_Chairs_ChairId_fk`
    FOREIGN KEY (`ChairId`)
    REFERENCES `AccessControl`.`Chairs` (`ChairId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'A mapping between a chair and an activated subset of the set of roles the user is assigned to.';


-- -----------------------------------------------------
-- Table `AccessControl`.`ParentRoles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccessControl`.`ParentRoles` (
  `RoleId` BIGINT UNSIGNED NOT NULL,
  `BaseRoleId` BIGINT UNSIGNED NOT NULL,
  `AssignedOn` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`RoleId`, `BaseRoleId`),
  INDEX `ParentRoles_Roles_BaseRoleId_fx` (`BaseRoleId` ASC),
  CONSTRAINT `ParentRoles_Roles_RoleId_fk`
    FOREIGN KEY (`RoleId`)
    REFERENCES `AccessControl`.`Roles` (`RoleId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `ParentRoles_Roles_BaseRoleId_fk`
    FOREIGN KEY (`BaseRoleId`)
    REFERENCES `AccessControl`.`Roles` (`RoleId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'For a given role, the set of parent roles.';


-- -----------------------------------------------------
-- Table `AccessControl`.`ObjectPermissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccessControl`.`ObjectPermissions` (
  `PermissionId` BIGINT UNSIGNED NOT NULL,
  `ObjectId` BIGINT UNSIGNED NOT NULL,
  `AssignedOn` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`PermissionId`, `ObjectId`),
  INDEX `ObjectPermissions_Objects_ObjectId_fx` (`ObjectId` ASC),
  CONSTRAINT `ObjectPermissions_Permissions_PermissionId_fk`
    FOREIGN KEY (`PermissionId`)
    REFERENCES `AccessControl`.`Permissions` (`PermissionId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `ObjectPermissions_Objects_ObjectId_fk`
    FOREIGN KEY (`ObjectId`)
    REFERENCES `AccessControl`.`Objects` (`ObjectId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Object/Permission mapping,';


-- -----------------------------------------------------
-- Table `AccessControl`.`OperationPermissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccessControl`.`OperationPermissions` (
  `PermissionId` BIGINT UNSIGNED NOT NULL,
  `OperationId` BIGINT UNSIGNED NOT NULL,
  `AssignedOn` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`PermissionId`, `OperationId`),
  INDEX `OperationPermissions_Operations_OperationId_fx` (`OperationId` ASC),
  CONSTRAINT `OperationPermissions_Permissions_PermissionId_fk`
    FOREIGN KEY (`PermissionId`)
    REFERENCES `AccessControl`.`Permissions` (`PermissionId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `OperationPermissions_Operations_OperationId_fk`
    FOREIGN KEY (`OperationId`)
    REFERENCES `AccessControl`.`Operations` (`OperationId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Operation/Permission mapping.';


-- -----------------------------------------------------
-- Table `AccessControl`.`RolePermissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccessControl`.`RolePermissions` (
  `RoleId` BIGINT UNSIGNED NOT NULL,
  `PermissionId` BIGINT UNSIGNED NOT NULL,
  `AssignedOn` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`RoleId`, `PermissionId`),
  INDEX `RolePermissions_Permissions_PermissionId_fx` (`PermissionId` ASC),
  CONSTRAINT `RolePermissions_Roles_RoleId_fk`
    FOREIGN KEY (`RoleId`)
    REFERENCES `AccessControl`.`Roles` (`RoleId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `RolePermissions_Permissions_PermissionId_fk`
    FOREIGN KEY (`PermissionId`)
    REFERENCES `AccessControl`.`Permissions` (`PermissionId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Role/Permission assignments.';


-- -----------------------------------------------------
-- Table `AccessControl`.`ChairRoles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccessControl`.`ChairRoles` (
  `RoleId` BIGINT UNSIGNED NOT NULL,
  `ChairId` BIGINT UNSIGNED NOT NULL,
  `AssignedOn` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`RoleId`, `ChairId`),
  INDEX `ChairRoles_Chairs_ChairId_fx` (`ChairId` ASC),
  CONSTRAINT `UserRoles_Roles_RoleId_fk`
    FOREIGN KEY (`RoleId`)
    REFERENCES `AccessControl`.`Roles` (`RoleId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `ChairRoles_Chairs_ChairId_fk`
    FOREIGN KEY (`ChairId`)
    REFERENCES `AccessControl`.`Chairs` (`ChairId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Chair/Role assignments.';


-- -----------------------------------------------------
-- Table `AccessControl`.`SessionRoles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccessControl`.`SessionRoles` (
  `SessionId` BIGINT UNSIGNED NOT NULL,
  `RoleId` BIGINT UNSIGNED NOT NULL,
  `TakenAt` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`SessionId`, `RoleId`, `TakenAt`),
  INDEX `SessionRoles_Roles_RoleId_fx` (`RoleId` ASC),
  CONSTRAINT `SessionRoles_Sessions_SessionId_fk`
    FOREIGN KEY (`SessionId`)
    REFERENCES `AccessControl`.`Sessions` (`SessionId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `SessionRoles_Roles_RoleId_fk`
    FOREIGN KEY (`RoleId`)
    REFERENCES `AccessControl`.`Roles` (`RoleId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Role activation constraints. An activated subset of the set of roles a user is assigned to.';


-- -----------------------------------------------------
-- Table `AccessControl`.`UserChairs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccessControl`.`UserChairs` (
  `ChairId` BIGINT UNSIGNED NOT NULL,
  `UserId` BIGINT UNSIGNED NOT NULL,
  `AssignedOn` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ChairId`, `UserId`),
  INDEX `UserChairs_Users_UserId_fk1_idx` (`UserId` ASC),
  CONSTRAINT `UserChairs_Chairs_ChairId_fk1`
    FOREIGN KEY (`ChairId`)
    REFERENCES `AccessControl`.`Chairs` (`ChairId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `UserChairs_Users_UserId_fk1`
    FOREIGN KEY (`UserId`)
    REFERENCES `AccessControl`.`Users` (`UserId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'User/Chair mapping.';


-- -----------------------------------------------------
-- Table `AccessControl`.`AccountChairs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AccessControl`.`AccountChairs` (
  `ChairId` BIGINT UNSIGNED NOT NULL,
  `AccountId` BIGINT UNSIGNED NOT NULL,
  `AssignedOn` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ChairId`, `AccountId`),
  INDEX `AccountChairs_Accounts_AccountId_fk1_idx` (`AccountId` ASC),
  CONSTRAINT `AccountChairs_Chairs_ChairId_fk1`
    FOREIGN KEY (`ChairId`)
    REFERENCES `AccessControl`.`Chairs` (`ChairId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `AccountChairs_Accounts_AccountId_fk1`
    FOREIGN KEY (`AccountId`)
    REFERENCES `AccountsManagement`.`Accounts` (`AccountId`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Account/Chair mapping.';


SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION;
SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS;
SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT;
SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- -----------------------------------------------------
-- Triggers
-- -----------------------------------------------------
DELIMITER $$

-- -----------------------------------------------------
-- Table `AccessControl`.`tr_ParentRoles_BINS`
-- -----------------------------------------------------
CREATE TRIGGER `AccessControl`.`tr_ParentRoles_BINS` BEFORE INSERT ON `AccessControl`.`ParentRoles` FOR EACH ROW
-- Emulates the CHECK (RoleId <> BaseRoleId) constraint
BEGIN
    IF (NEW.`RoleId` = NEW.`BaseRoleId`) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'CHECK constraint on ParentRoles failed', CONSTRAINT_NAME = 'CHECK';
    END IF;
END$$


-- -----------------------------------------------------
-- Table `AccessControl`.`tr_ParentRoles_BUPD`
-- -----------------------------------------------------
CREATE TRIGGER `AccessControl`.`tr_ParentRoles_BUPD` BEFORE UPDATE ON `AccessControl`.`ParentRoles` FOR EACH ROW
-- Emulates the CHECK (RoleId <> BaseRoleId) constraint
BEGIN
    IF (NEW.`RoleId` = NEW.`BaseRoleId`) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'CHECK constraint on ParentRoles failed';
    END IF;
END$$


DELIMITER ;


-- --------------------------------------------------------
-- Host:                         127.0.0.1
-- Server:                       localhost
-- Port:                         3306
-- Server version:               5.6.12-log - MySQL Community Server (GPL)
-- Server OS:                    Windows 7 - 32bit
-- MySQL Workbench version:      6.1.4.11773 Community build 1454
-- HeidiSQL version:             6.0.0.4024
-- phpMyAdmin version:           4.0.4
-- PHP version:                  5.4.16
-- Date/time:                    2014-04-25 09:37:39
-- --------------------------------------------------------
